<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.alphatek</groupId>
	<artifactId>spring-mvc-template</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>SpringMvcTemplate</name>

	<properties>
		<project.charset>UTF-8</project.charset>
		<java.version>1.7</java.version>
		<org.springframework.version>3.2.3.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.4.RELEASE</org.springframework.security.version>
		<org.apache.tiles.version>2.2.2</org.apache.tiles.version>
		<javax.servlet.jstl.version>1.2</javax.servlet.jstl.version>
		<com.fasterxml.jackson.version>2.2.1</com.fasterxml.jackson.version>
		<jrebel-maven-plugin.version>1.1.2</jrebel-maven-plugin.version>
		<jcl-over-slf4j.version>1.7.5</jcl-over-slf4j.version>
		<guava.version>14.0.1</guava.version>
		<maven.version>3.0.5</maven.version>
		<logback-classic.version>1.0.12</logback-classic.version>
		<ehcache.version>2.7.0</ehcache.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
		    Expression Language (depends on web-core)
		    Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<!--
		    Bean Factory and JavaBeans utilities (depends on web-core)
		    Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
		    Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
		    Define this if you need any of these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
		JDBC Data Access Library (depends on web-core, web-beans, web-context, web-tx)
		Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Spring Security
		-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<!--
		  Jackson JSON Library
		-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${com.fasterxml.jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${com.fasterxml.jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax.servlet.jstl.version}</version>
		</dependency>
		<!--
			ehCache
		-->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!--
		  H2 Database
		-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.171</version>
			<scope>runtime</scope>
		</dependency>

		<!--
			Logback
		-->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--
			slf4j
		-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcl-over-slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<!--
			Apache Tiles
		-->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>${org.apache.tiles.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-mapper-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jcl-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--
			Google Guava
		-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>SpringMvcTemplate</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<!--<plugin>-->
				<!--<groupId>org.zeroturnaround</groupId>-->
				<!--<artifactId>jrebel-maven-plugin</artifactId>-->
				<!--<version>${jrebel-maven-plugin.version}</version>-->
				<!--<configuration>-->
					<!--<rebelXmlDirectory>src/main/resources</rebelXmlDirectory>-->
					<!--<webappDirectory>src/main/webapp</webappDirectory>-->
					<!--<addResourcesDirToRebelXml>true</addResourcesDirToRebelXml>-->
					<!--<showGenerated>true</showGenerated>-->
					<!--<alwaysGenerate>true</alwaysGenerate>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>generate-rebel-xml</id>-->
						<!--<phase>process-resources</phase>-->
						<!--<goals>-->
							<!--<goal>generate</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<plugin>
				<groupId>com.github.mcheely</groupId>
				<artifactId>requirejs-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>optimize-js</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>optimize</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- optional path to a nodejs executable -->
					<nodeExecutable>/usr/local/bin/node</nodeExecutable>
					<!-- path to optimizer json config file -->
					<configFile>${basedir}/src/main/webapp/resources/bin/app.build.js</configFile>
					<!-- optional path to optimizer executable -->
					<optimizerFile>${basedir}/node_modules/requirejs/bin/r.js</optimizerFile>
					<!--
						Whether or not to process configFile with maven filters.
						If you use this option, some options in your configFile
						must resolve to absolute paths (see below)
					-->
					<filterConfig>false</filterConfig>
					<!-- Skip requirejs optimization if true -->
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
</project>